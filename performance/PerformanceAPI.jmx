<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="API_Performance" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Add or Modify Tokenization" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">10</stringProp>
        <stringProp name="ThreadGroup.ramp_time">2</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">240</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
&quot;password&quot; : &quot;${Password}&quot;,&#xd;
&quot;userName&quot;: &quot;${UserName}&quot;,&#xd;
&quot;merchantCode&quot;:&quot;clubmed-sandpiper&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">clubmed-sandpiper-perf.payvela.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ui/v1/login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add or Modify Tokenization" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;money&quot;: {&#xd;
        &quot;amount&quot;: &quot;&quot;,&#xd;
        &quot;currency&quot;: {&#xd;
            &quot;currencyCode&quot;: &quot;USD&quot;,&#xd;
            &quot;isoNumericCode&quot;: &quot;&quot;&#xd;
        }&#xd;
    },&#xd;
    &quot;paymentType&quot;: &quot;SINGLE_PAYMENT&quot;,&#xd;
    &quot;consolidatedPayInfo&quot;: {&#xd;
        &quot;payments&quot;: [&#xd;
            {&#xd;
                &quot;type&quot;: &quot;creditcard&quot;,&#xd;
                &quot;paymentMethodType&quot;: &quot;CREDIT_CARD&quot;,&#xd;
                &quot;cardNetworkName&quot;: &quot;VISA&quot;,&#xd;
                &quot;nameOnCard&quot;: &quot;&quot;,&#xd;
                &quot;firstName&quot;: &quot;John&quot;,&#xd;
                &quot;lastName&quot;: &quot;Smith&quot;,&#xd;
                &quot;cardNumber&quot;: &quot;${CardNo}&quot;,&#xd;
                &quot;expiryMonth&quot;: &quot;08&quot;,&#xd;
                &quot;expiryYear&quot;: &quot;27&quot;,&#xd;
                &quot;cvn&quot;: &quot;411&quot;,&#xd;
                &quot;cardSwipe&quot;: false,&#xd;
                &quot;posKeyed&quot;: false,&#xd;
                &quot;emvContact&quot;: false,&#xd;
                &quot;geolocation&quot;: &quot;{\&quot;city\&quot;:\&quot;Duluth\&quot;,\&quot;country\&quot;:{\&quot;code\&quot;:\&quot;US\&quot;,\&quot;name\&quot;:\&quot;United States\&quot;},\&quot;timestamp\&quot;:1603902976838,\&quot;location\&quot;:{\&quot;latitude\&quot;:34.0492288,\&quot;longitude\&quot;:-84.18754559999999,\&quot;address\&quot;:\&quot;620 Oakmont Hill, Duluth, GA 30097, USA\&quot;,\&quot;placeId\&quot;:\&quot;ChIJW96-njKf9YgR_A1VmLcvgqI\&quot;,\&quot;altitude\&quot;:null,\&quot;accuracy_radius\&quot;:3913,\&quot;altitudeAccuracy\&quot;:null,\&quot;heading\&quot;:null,\&quot;speed\&quot;:null,\&quot;time_zone\&quot;:\&quot;America/New_York\&quot;},\&quot;userAgent\&quot;:\&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36\&quot;,\&quot;ip\&quot;:\&quot;71.140.147.103\&quot;,\&quot;remoteHost\&quot;:\&quot;\&quot;}&quot;,&#xd;
                &quot;processDebitOrCredit&quot;: &quot;&quot;,&#xd;
                &quot;refundMethod&quot;: {&#xd;
                    &quot;name&quot;: &quot;ORIGINAL_PAYMENT_METHOD&quot;&#xd;
                },&#xd;
                &quot;refundStatus&quot;: {&#xd;
                    &quot;name&quot;: &quot;NONE&quot;&#xd;
                },&#xd;
                &quot;voidStatus&quot;: {&#xd;
                    &quot;name&quot;: &quot;NONE&quot;&#xd;
                },&#xd;
                &quot;orderId&quot;: &quot;&quot;,&#xd;
                &quot;subscriptionId&quot;: &quot;&quot;,&#xd;
                &quot;reEnterAccountNumber&quot;: &quot;&quot;,&#xd;
                &quot;accountHolderName&quot;: &quot;&quot;,&#xd;
                &quot;dateOfBirth&quot;: &quot;&quot;,&#xd;
                &quot;driversLicenseNumber&quot;: &quot;&quot;,&#xd;
                &quot;driversLicenseState&quot;: null,&#xd;
                &quot;billingAddress&quot;: {&#xd;
                    &quot;country&quot;: &quot;USA&quot;,&#xd;
                    &quot;state&quot;: &quot;GA&quot;,&#xd;
                    &quot;city&quot;: &quot;Johns Creek&quot;,&#xd;
                    &quot;addressLine1&quot;: &quot;12000 Findley Road&quot;,&#xd;
                    &quot;addressLine2&quot;: &quot;Suite 350&quot;,&#xd;
                    &quot;addressLine3&quot;: null,&#xd;
                    &quot;zipCode&quot;: &quot;30097&quot;&#xd;
                },&#xd;
                &quot;money&quot;: {&#xd;
                    &quot;amount&quot;: &quot;&quot;,&#xd;
                    &quot;currency&quot;: {&#xd;
                        &quot;currencyCode&quot;: &quot;USD&quot;,&#xd;
                        &quot;isoNumericCode&quot;: &quot;&quot;&#xd;
                    }&#xd;
                },&#xd;
                &quot;paymentGateway&quot;: {&#xd;
                    &quot;name&quot;: &quot;CYBERSOURCE&quot;&#xd;
                },&#xd;
                &quot;payWith&quot;: &quot;CARD_NOT_PRESENT&quot;,&#xd;
                &quot;posTerminalId&quot;: &quot;&quot;,&#xd;
                &quot;arqcData&quot;: &quot;&quot;,&#xd;
                &quot;trackData1&quot;: &quot;&quot;,&#xd;
                &quot;trackData2&quot;: &quot;&quot;,&#xd;
                &quot;encryptedTrack1&quot;: &quot;&quot;,&#xd;
                &quot;encryptedTrack2&quot;: &quot;&quot;,&#xd;
                &quot;encryptedTrack&quot;: false,&#xd;
                &quot;posEntryMode&quot;: {&#xd;
                    &quot;name&quot;: &quot;MANUAL_ENTRY_WIRED&quot;&#xd;
                },&#xd;
                &quot;authCode&quot;: &quot;&quot;,&#xd;
                &quot;convenienceFees&quot;: 0&#xd;
            }&#xd;
        ]&#xd;
    },&#xd;
    &quot;paymentCycle&quot;: &quot;ONCE&quot;,&#xd;
    &quot;transactionType&quot;: {&#xd;
        &quot;name&quot;: &quot;PRE_AUTHORIZATION&quot;&#xd;
    },&#xd;
    &quot;ssoEnabledInd&quot;: &quot;false&quot;,&#xd;
    &quot;threeDSecurePaReq&quot;: &quot;&quot;,&#xd;
    &quot;threeDSecureURL&quot;: &quot;&quot;,&#xd;
    &quot;threeDSecureVISAPit&quot;: &quot;&quot;,&#xd;
    &quot;realexRequestId&quot;: &quot;&quot;,&#xd;
    &quot;threeDSecureEncodedMD&quot;: &quot;&quot;,&#xd;
    &quot;password&quot;: &quot;password&quot;,&#xd;
    &quot;paymentMethodName&quot;: &quot;&quot;,&#xd;
    &quot;invoiceNumber&quot;: &quot;&quot;,&#xd;
    &quot;voidReason&quot;: &quot;&quot;,&#xd;
    &quot;refundReason&quot;: &quot;&quot;,&#xd;
    &quot;transactionCategory&quot;: {&#xd;
        &quot;name&quot;: &quot;CARD_NOT_PRESENT&quot;&#xd;
    },&#xd;
    &quot;paymentAction&quot;: {&#xd;
        &quot;name&quot;: &quot;PRE_AUTHORIZATION&quot;&#xd;
    },&#xd;
    &quot;memo&quot;: &quot;&quot;,&#xd;
    &quot;addProfileAsPartOfAuthRequest&quot;: false,&#xd;
    &quot;merchantId&quot;: &quot;1&quot;,&#xd;
    &quot;channel&quot;: {&#xd;
        &quot;id&quot;: &quot;&quot;&#xd;
    },&#xd;
    &quot;userRole&quot;: &quot;&quot;,&#xd;
    &quot;uiType&quot;: &quot;&quot;,&#xd;
    &quot;emailAddress&quot;: &quot;&quot;,&#xd;
    &quot;reEnterEmailAddress&quot;: &quot;&quot;,&#xd;
    &quot;recurringInd&quot;: false,&#xd;
    &quot;id&quot;: &quot;&quot;,&#xd;
    &quot;createdUserId&quot;: &quot;&quot;,&#xd;
    &quot;disablePaymentType&quot;: false,&#xd;
    &quot;disableAmount&quot;: false,&#xd;
    &quot;digitalSignature&quot;: &quot;&quot;,&#xd;
    &quot;agreeToPayInd&quot;: false,&#xd;
    &quot;agreeToAcceptRefundInd&quot;: false,&#xd;
    &quot;goodsAndServicesPurchaseType&quot;: {&#xd;
        &quot;name&quot;: &quot;UNKNOWN&quot;&#xd;
    },&#xd;
    &quot;checkInDate&quot;: &quot;&quot;,&#xd;
    &quot;checkOutDate&quot;: &quot;&quot;,&#xd;
    &quot;bookingNumber&quot;: &quot;&quot;,&#xd;
    &quot;groupName&quot;: &quot;&quot;,&#xd;
    &quot;customerName&quot;: &quot;&quot;,&#xd;
    &quot;merchantLocation&quot;: null,&#xd;
    &quot;customerId&quot;: &quot;&quot;,&#xd;
    &quot;numberOfCards&quot;: &quot;1&quot;,&#xd;
    &quot;confirmationInd&quot;: false,&#xd;
    &quot;productCode&quot;: null,&#xd;
    &quot;geolocation&quot;: &quot;{\&quot;city\&quot;:\&quot;Duluth\&quot;,\&quot;country\&quot;:{\&quot;code\&quot;:\&quot;US\&quot;,\&quot;name\&quot;:\&quot;United States\&quot;},\&quot;timestamp\&quot;:1603902976838,\&quot;location\&quot;:{\&quot;latitude\&quot;:34.0492288,\&quot;longitude\&quot;:-84.18754559999999,\&quot;address\&quot;:\&quot;620 Oakmont Hill, Duluth, GA 30097, USA\&quot;,\&quot;placeId\&quot;:\&quot;ChIJW96-njKf9YgR_A1VmLcvgqI\&quot;,\&quot;altitude\&quot;:null,\&quot;accuracy_radius\&quot;:3913,\&quot;altitudeAccuracy\&quot;:null,\&quot;heading\&quot;:null,\&quot;speed\&quot;:null,\&quot;time_zone\&quot;:\&quot;America/New_York\&quot;},\&quot;userAgent\&quot;:\&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36\&quot;,\&quot;ip\&quot;:\&quot;71.140.147.103\&quot;,\&quot;remoteHost\&quot;:\&quot;\&quot;}&quot;,&#xd;
    &quot;paymentMethodNickname&quot;: &quot;VISA-2-20201028&quot;,&#xd;
    &quot;sameAsUserAddress&quot;: [&#xd;
        false&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">clubmed-sandpiper-perf.payvela.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ui/v1/addOrModifyTokenizedPaymentMethod</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Tokenized Payment Method" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;money&quot;: {&#xd;
        &quot;amount&quot;: &quot;&quot;,&#xd;
        &quot;currency&quot;: {&#xd;
            &quot;currencyCode&quot;: &quot;USD&quot;,&#xd;
            &quot;isoNumericCode&quot;: &quot;&quot;&#xd;
        }&#xd;
    },&#xd;
    &quot;paymentType&quot;: &quot;SINGLE_PAYMENT&quot;,&#xd;
    &quot;consolidatedPayInfo&quot;: {&#xd;
        &quot;payments&quot;: [{&#xd;
            &quot;type&quot;: &quot;creditcard&quot;,&#xd;
            &quot;paymentMethodType&quot;: &quot;CREDIT_CARD&quot;,&#xd;
            &quot;cardNetworkName&quot;: &quot;VISA&quot;,&#xd;
            &quot;nameOnCard&quot;: &quot;&quot;,&#xd;
            &quot;firstName&quot;: &quot;&quot;,&#xd;
            &quot;lastName&quot;: &quot;&quot;,&#xd;
            &quot;cardNumber&quot;: &quot;&quot;,&#xd;
            &quot;expiryMonth&quot;: &quot;&quot;,&#xd;
            &quot;expiryYear&quot;: &quot;&quot;,&#xd;
            &quot;cvn&quot;: &quot;&quot;,&#xd;
            &quot;cardSwipe&quot;: false,&#xd;
            &quot;posKeyed&quot;: false,&#xd;
            &quot;emvContact&quot;: false,&#xd;
            &quot;geolocation&quot;: &quot;{\&quot;city\&quot;:\&quot;Duluth\&quot;,\&quot;country\&quot;:{\&quot;code\&quot;:\&quot;US\&quot;,\&quot;name\&quot;:\&quot;United States\&quot;},\&quot;timestamp\&quot;:1603906864946,\&quot;location\&quot;:{\&quot;latitude\&quot;:34.0492288,\&quot;longitude\&quot;:-84.18754559999999,\&quot;address\&quot;:\&quot;620 Oakmont Hill, Duluth, GA 30097, USA\&quot;,\&quot;placeId\&quot;:\&quot;ChIJW96-njKf9YgR_A1VmLcvgqI\&quot;,\&quot;altitude\&quot;:null,\&quot;accuracy_radius\&quot;:3913,\&quot;altitudeAccuracy\&quot;:null,\&quot;heading\&quot;:null,\&quot;speed\&quot;:null,\&quot;time_zone\&quot;:\&quot;America/New_York\&quot;},\&quot;userAgent\&quot;:\&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36\&quot;,\&quot;ip\&quot;:\&quot;71.140.147.103\&quot;,\&quot;remoteHost\&quot;:\&quot;\&quot;}&quot;,&#xd;
            &quot;processDebitOrCredit&quot;: &quot;&quot;,&#xd;
            &quot;refundMethod&quot;: {&#xd;
                &quot;name&quot;: &quot;ORIGINAL_PAYMENT_METHOD&quot;&#xd;
            },&#xd;
            &quot;refundStatus&quot;: {&#xd;
                &quot;name&quot;: &quot;NONE&quot;&#xd;
            },&#xd;
            &quot;voidStatus&quot;: {&#xd;
                &quot;name&quot;: &quot;NONE&quot;&#xd;
            },&#xd;
            &quot;orderId&quot;: &quot;37a90d61-7317-4a44-99ff-dd09a9a70ac9&quot;,&#xd;
            &quot;subscriptionId&quot;: &quot;9909000307224009&quot;,&#xd;
            &quot;routingNumber&quot;: &quot;&quot;,&#xd;
            &quot;accountNumber&quot;: &quot;&quot;,&#xd;
            &quot;reEnterAccountNumber&quot;: &quot;&quot;,&#xd;
            &quot;accountHolderName&quot;: &quot;&quot;,&#xd;
            &quot;bankName&quot;: &quot;&quot;,&#xd;
            &quot;accountType&quot;: &quot;&quot;,&#xd;
            &quot;dateOfBirth&quot;: &quot;&quot;,&#xd;
            &quot;driversLicenseNumber&quot;: &quot;&quot;,&#xd;
            &quot;driversLicenseState&quot;: null,&#xd;
            &quot;billingAddress&quot;: {&#xd;
                &quot;country&quot;: &quot;USA&quot;,&#xd;
                &quot;state&quot;: null,&#xd;
                &quot;city&quot;: &quot;&quot;,&#xd;
                &quot;addressLine1&quot;: &quot;&quot;,&#xd;
                &quot;addressLine2&quot;: &quot;&quot;,&#xd;
                &quot;addressLine3&quot;: &quot;&quot;,&#xd;
                &quot;zipCode&quot;: &quot;&quot;&#xd;
            },&#xd;
            &quot;money&quot;: {&#xd;
                &quot;amount&quot;: &quot;&quot;,&#xd;
                &quot;currency&quot;: {&#xd;
                    &quot;currencyCode&quot;: &quot;USD&quot;,&#xd;
                    &quot;isoNumericCode&quot;: &quot;&quot;&#xd;
                }&#xd;
            },&#xd;
            &quot;paymentGateway&quot;: {&#xd;
                &quot;value&quot;: &quot;CyberSource&quot;,&#xd;
                &quot;name&quot;: &quot;CYBERSOURCE&quot;&#xd;
            },&#xd;
            &quot;payWith&quot;: &quot;CARD_NOT_PRESENT&quot;,&#xd;
            &quot;posTerminalId&quot;: &quot;&quot;,&#xd;
            &quot;arqcData&quot;: &quot;&quot;,&#xd;
            &quot;trackData1&quot;: &quot;&quot;,&#xd;
            &quot;trackData2&quot;: &quot;&quot;,&#xd;
            &quot;encryptedTrack1&quot;: &quot;&quot;,&#xd;
            &quot;encryptedTrack2&quot;: &quot;&quot;,&#xd;
            &quot;encryptedTrack&quot;: false,&#xd;
            &quot;posEntryMode&quot;: {&#xd;
                &quot;name&quot;: &quot;MANUAL_ENTRY_WIRED&quot;&#xd;
            },&#xd;
            &quot;authCode&quot;: &quot;&quot;,&#xd;
            &quot;convenienceFees&quot;: 0,&#xd;
            &quot;merchantId&quot;: 1&#xd;
        }]&#xd;
    },&#xd;
    &quot;paymentCycle&quot;: &quot;ONCE&quot;,&#xd;
    &quot;transactionType&quot;: {&#xd;
        &quot;name&quot;: &quot;PRE_AUTHORIZATION&quot;&#xd;
    },&#xd;
    &quot;ssoEnabledInd&quot;: &quot;false&quot;,&#xd;
    &quot;threeDSecurePaReq&quot;: &quot;&quot;,&#xd;
    &quot;threeDSecureURL&quot;: &quot;&quot;,&#xd;
    &quot;threeDSecureVISAPit&quot;: &quot;&quot;,&#xd;
    &quot;realexRequestId&quot;: &quot;&quot;,&#xd;
    &quot;threeDSecureEncodedMD&quot;: &quot;&quot;,&#xd;
    &quot;password&quot;: &quot;password&quot;,&#xd;
    &quot;paymentMethodName&quot;: &quot;&quot;,&#xd;
    &quot;invoiceNumber&quot;: &quot;&quot;,&#xd;
    &quot;voidReason&quot;: &quot;&quot;,&#xd;
    &quot;refundReason&quot;: &quot;&quot;,&#xd;
    &quot;transactionCategory&quot;: {&#xd;
        &quot;name&quot;: &quot;CARD_NOT_PRESENT&quot;&#xd;
    },&#xd;
    &quot;paymentAction&quot;: {&#xd;
        &quot;name&quot;: &quot;PRE_AUTHORIZATION&quot;&#xd;
    },&#xd;
    &quot;memo&quot;: &quot;&quot;,&#xd;
    &quot;addProfileAsPartOfAuthRequest&quot;: false,&#xd;
    &quot;merchantId&quot;: 1,&#xd;
    &quot;channel&quot;: {&#xd;
        &quot;id&quot;: &quot;&quot;&#xd;
    },&#xd;
    &quot;userRole&quot;: &quot;&quot;,&#xd;
    &quot;uiType&quot;: &quot;&quot;,&#xd;
    &quot;emailAddress&quot;: &quot;&quot;,&#xd;
    &quot;reEnterEmailAddress&quot;: &quot;&quot;,&#xd;
    &quot;recurringInd&quot;: false,&#xd;
    &quot;id&quot;: 161,&#xd;
    &quot;createdUserId&quot;: &quot;&quot;,&#xd;
    &quot;disablePaymentType&quot;: false,&#xd;
    &quot;disableAmount&quot;: false,&#xd;
    &quot;digitalSignature&quot;: &quot;&quot;,&#xd;
    &quot;agreeToPayInd&quot;: false,&#xd;
    &quot;agreeToAcceptRefundInd&quot;: false,&#xd;
    &quot;goodsAndServicesPurchaseType&quot;: {&#xd;
        &quot;name&quot;: &quot;UNKNOWN&quot;&#xd;
    },&#xd;
    &quot;checkInDate&quot;: &quot;&quot;,&#xd;
    &quot;checkOutDate&quot;: &quot;&quot;,&#xd;
    &quot;bookingNumber&quot;: &quot;&quot;,&#xd;
    &quot;groupName&quot;: &quot;&quot;,&#xd;
    &quot;customerName&quot;: &quot;&quot;,&#xd;
    &quot;merchantLocation&quot;: null,&#xd;
    &quot;customerId&quot;: &quot;&quot;,&#xd;
    &quot;numberOfCards&quot;: &quot;1&quot;,&#xd;
    &quot;confirmationInd&quot;: false,&#xd;
    &quot;productCode&quot;: null,&#xd;
    &quot;geolocation&quot;: &quot;{\&quot;city\&quot;:\&quot;Duluth\&quot;,\&quot;country\&quot;:{\&quot;code\&quot;:\&quot;US\&quot;,\&quot;name\&quot;:\&quot;United States\&quot;},\&quot;timestamp\&quot;:1603906864946,\&quot;location\&quot;:{\&quot;latitude\&quot;:34.0492288,\&quot;longitude\&quot;:-84.18754559999999,\&quot;address\&quot;:\&quot;620 Oakmont Hill, Duluth, GA 30097, USA\&quot;,\&quot;placeId\&quot;:\&quot;ChIJW96-njKf9YgR_A1VmLcvgqI\&quot;,\&quot;altitude\&quot;:null,\&quot;accuracy_radius\&quot;:3913,\&quot;altitudeAccuracy\&quot;:null,\&quot;heading\&quot;:null,\&quot;speed\&quot;:null,\&quot;time_zone\&quot;:\&quot;America/New_York\&quot;},\&quot;userAgent\&quot;:\&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36\&quot;,\&quot;ip\&quot;:\&quot;71.140.147.103\&quot;,\&quot;remoteHost\&quot;:\&quot;\&quot;}&quot;&#xd;
}  </stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">clubmed-sandpiper-perf.payvela.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ui/v1/getTokenizedPaymentMethod</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TokenizedPaymentMethod" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;startDate&quot;: &quot;2020-12-10&quot;,&#xd;
    &quot;endDate&quot;: &quot;2021-01-10&quot;,&#xd;
    &quot;userId&quot;: &quot;${UserID}&quot;,&#xd;
    &quot;paymentMethodType&quot;: [],&#xd;
    &quot;paymentGateway&quot;: [],&#xd;
    &quot;paymentMethodStatus&quot;: [],&#xd;
    &quot;createdUserId&quot;: [],&#xd;
    &quot;merchantId&quot;: [&quot;1&quot;]  &#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">clubmed-sandpiper-perf.payvela.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ui/v1/tokenizedPaymentMethods</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DeleteTokenizedPayment" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;money&quot;: {&#xd;
        &quot;amount&quot;: &quot;&quot;,&#xd;
        &quot;currency&quot;: {&#xd;
            &quot;currencyCode&quot;: &quot;USD&quot;,&#xd;
            &quot;isoNumericCode&quot;: &quot;&quot;&#xd;
        }&#xd;
    },&#xd;
    &quot;paymentType&quot;: &quot;SINGLE_PAYMENT&quot;,&#xd;
    &quot;consolidatedPayInfo&quot;: {&#xd;
        &quot;payments&quot;: [{&#xd;
            &quot;type&quot;: &quot;creditcard&quot;,&#xd;
            &quot;paymentMethodType&quot;: &quot;CREDIT_CARD&quot;,&#xd;
            &quot;cardNetworkName&quot;: &quot;&quot;,&#xd;
            &quot;nameOnCard&quot;: &quot;&quot;,&#xd;
            &quot;firstName&quot;: &quot;&quot;,&#xd;
            &quot;lastName&quot;: &quot;&quot;,&#xd;
            &quot;cardNumber&quot;: &quot;&quot;,&#xd;
            &quot;expiryMonth&quot;: &quot;&quot;,&#xd;
            &quot;expiryYear&quot;: &quot;&quot;,&#xd;
            &quot;cvn&quot;: &quot;&quot;,&#xd;
            &quot;cardSwipe&quot;: false,&#xd;
            &quot;posKeyed&quot;: false,&#xd;
            &quot;emvContact&quot;: false,&#xd;
            &quot;geolocation&quot;: &quot;{\&quot;city\&quot;:\&quot;Duluth\&quot;,\&quot;country\&quot;:{\&quot;code\&quot;:\&quot;US\&quot;,\&quot;name\&quot;:\&quot;United States\&quot;},\&quot;timestamp\&quot;:1603906864946,\&quot;location\&quot;:{\&quot;latitude\&quot;:34.0492288,\&quot;longitude\&quot;:-84.18754559999999,\&quot;address\&quot;:\&quot;620 Oakmont Hill, Duluth, GA 30097, USA\&quot;,\&quot;placeId\&quot;:\&quot;ChIJW96-njKf9YgR_A1VmLcvgqI\&quot;,\&quot;altitude\&quot;:null,\&quot;accuracy_radius\&quot;:3913,\&quot;altitudeAccuracy\&quot;:null,\&quot;heading\&quot;:null,\&quot;speed\&quot;:null,\&quot;time_zone\&quot;:\&quot;America/New_York\&quot;},\&quot;userAgent\&quot;:\&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36\&quot;,\&quot;ip\&quot;:\&quot;71.140.147.103\&quot;,\&quot;remoteHost\&quot;:\&quot;\&quot;}&quot;,&#xd;
            &quot;processDebitOrCredit&quot;: &quot;&quot;,&#xd;
            &quot;refundMethod&quot;: {&#xd;
                &quot;name&quot;: &quot;ORIGINAL_PAYMENT_METHOD&quot;&#xd;
            },&#xd;
            &quot;refundStatus&quot;: {&#xd;
                &quot;name&quot;: &quot;NONE&quot;&#xd;
            },&#xd;
            &quot;voidStatus&quot;: {&#xd;
                &quot;name&quot;: &quot;NONE&quot;&#xd;
            },&#xd;
            &quot;orderId&quot;: &quot;u82wh2hmwgfo&quot;,&#xd;
            &quot;subscriptionId&quot;: &quot;116556708&quot;,&#xd;
            &quot;routingNumber&quot;: &quot;&quot;,&#xd;
            &quot;accountNumber&quot;: &quot;&quot;,&#xd;
            &quot;reEnterAccountNumber&quot;: &quot;&quot;,&#xd;
            &quot;accountHolderName&quot;: &quot;&quot;,&#xd;
            &quot;bankName&quot;: &quot;&quot;,&#xd;
            &quot;accountType&quot;: &quot;&quot;,&#xd;
            &quot;dateOfBirth&quot;: &quot;&quot;,&#xd;
            &quot;driversLicenseNumber&quot;: &quot;&quot;,&#xd;
            &quot;driversLicenseState&quot;: null,&#xd;
            &quot;billingAddress&quot;: {&#xd;
                &quot;country&quot;: &quot;USA&quot;,&#xd;
                &quot;state&quot;: null,&#xd;
                &quot;city&quot;: &quot;&quot;,&#xd;
                &quot;addressLine1&quot;: &quot;&quot;,&#xd;
                &quot;addressLine2&quot;: &quot;&quot;,&#xd;
                &quot;addressLine3&quot;: &quot;&quot;,&#xd;
                &quot;zipCode&quot;: &quot;&quot;&#xd;
            },&#xd;
            &quot;money&quot;: {&#xd;
                &quot;amount&quot;: &quot;&quot;,&#xd;
                &quot;currency&quot;: {&#xd;
                    &quot;currencyCode&quot;: &quot;USD&quot;,&#xd;
                    &quot;isoNumericCode&quot;: &quot;&quot;&#xd;
                }&#xd;
            },&#xd;
            &quot;paymentGateway&quot;: {&#xd;
                &quot;value&quot;: &quot;Chase Paymentech (Orbital)&quot;,&#xd;
                &quot;name&quot;: &quot;CHASE_PAYMENTECH_ORBITAL&quot;&#xd;
            },&#xd;
            &quot;payWith&quot;: &quot;CARD_NOT_PRESENT&quot;,&#xd;
            &quot;posTerminalId&quot;: &quot;&quot;,&#xd;
            &quot;arqcData&quot;: &quot;&quot;,&#xd;
            &quot;trackData1&quot;: &quot;&quot;,&#xd;
            &quot;trackData2&quot;: &quot;&quot;,&#xd;
            &quot;encryptedTrack1&quot;: &quot;&quot;,&#xd;
            &quot;encryptedTrack2&quot;: &quot;&quot;,&#xd;
            &quot;encryptedTrack&quot;: false,&#xd;
            &quot;posEntryMode&quot;: {&#xd;
                &quot;name&quot;: &quot;MANUAL_ENTRY_WIRED&quot;&#xd;
            },&#xd;
            &quot;authCode&quot;: &quot;&quot;,&#xd;
            &quot;convenienceFees&quot;: 0&#xd;
        }]&#xd;
    },&#xd;
    &quot;paymentCycle&quot;: &quot;ONCE&quot;,&#xd;
    &quot;transactionType&quot;: {&#xd;
        &quot;name&quot;: &quot;PRE_AUTHORIZATION&quot;&#xd;
    },&#xd;
    &quot;ssoEnabledInd&quot;: &quot;false&quot;,&#xd;
    &quot;threeDSecurePaReq&quot;: &quot;&quot;,&#xd;
    &quot;threeDSecureURL&quot;: &quot;&quot;,&#xd;
    &quot;threeDSecureVISAPit&quot;: &quot;&quot;,&#xd;
    &quot;realexRequestId&quot;: &quot;&quot;,&#xd;
    &quot;threeDSecureEncodedMD&quot;: &quot;&quot;,&#xd;
    &quot;password&quot;: &quot;password&quot;,&#xd;
    &quot;paymentMethodName&quot;: &quot;&quot;,&#xd;
    &quot;invoiceNumber&quot;: &quot;&quot;,&#xd;
    &quot;voidReason&quot;: &quot;&quot;,&#xd;
    &quot;refundReason&quot;: &quot;&quot;,&#xd;
    &quot;transactionCategory&quot;: {&#xd;
        &quot;name&quot;: &quot;CARD_NOT_PRESENT&quot;&#xd;
    },&#xd;
    &quot;paymentAction&quot;: {&#xd;
        &quot;name&quot;: &quot;PRE_AUTHORIZATION&quot;&#xd;
    },&#xd;
    &quot;memo&quot;: &quot;&quot;,&#xd;
    &quot;addProfileAsPartOfAuthRequest&quot;: false,&#xd;
    &quot;merchantId&quot;: &quot;&quot;,&#xd;
    &quot;channel&quot;: {&#xd;
        &quot;id&quot;: &quot;&quot;&#xd;
    },&#xd;
    &quot;userRole&quot;: &quot;&quot;,&#xd;
    &quot;uiType&quot;: &quot;&quot;,&#xd;
    &quot;emailAddress&quot;: &quot;&quot;,&#xd;
    &quot;reEnterEmailAddress&quot;: &quot;&quot;,&#xd;
    &quot;recurringInd&quot;: false,&#xd;
    &quot;id&quot;: 162,&#xd;
    &quot;createdUserId&quot;: &quot;&quot;,&#xd;
    &quot;disablePaymentType&quot;: false,&#xd;
    &quot;disableAmount&quot;: false,&#xd;
    &quot;digitalSignature&quot;: &quot;&quot;,&#xd;
    &quot;agreeToPayInd&quot;: false,&#xd;
    &quot;agreeToAcceptRefundInd&quot;: false,&#xd;
    &quot;goodsAndServicesPurchaseType&quot;: {&#xd;
        &quot;name&quot;: &quot;UNKNOWN&quot;&#xd;
    },&#xd;
    &quot;checkInDate&quot;: &quot;&quot;,&#xd;
    &quot;checkOutDate&quot;: &quot;&quot;,&#xd;
    &quot;bookingNumber&quot;: &quot;&quot;,&#xd;
    &quot;groupName&quot;: &quot;&quot;,&#xd;
    &quot;customerName&quot;: &quot;&quot;,&#xd;
    &quot;merchantLocation&quot;: null,&#xd;
    &quot;customerId&quot;: &quot;&quot;,&#xd;
    &quot;numberOfCards&quot;: &quot;1&quot;,&#xd;
    &quot;confirmationInd&quot;: false,&#xd;
    &quot;productCode&quot;: null,&#xd;
    &quot;geolocation&quot;: &quot;{\&quot;city\&quot;:\&quot;Duluth\&quot;,\&quot;country\&quot;:{\&quot;code\&quot;:\&quot;US\&quot;,\&quot;name\&quot;:\&quot;United States\&quot;},\&quot;timestamp\&quot;:1603906864946,\&quot;location\&quot;:{\&quot;latitude\&quot;:34.0492288,\&quot;longitude\&quot;:-84.18754559999999,\&quot;address\&quot;:\&quot;620 Oakmont Hill, Duluth, GA 30097, USA\&quot;,\&quot;placeId\&quot;:\&quot;ChIJW96-njKf9YgR_A1VmLcvgqI\&quot;,\&quot;altitude\&quot;:null,\&quot;accuracy_radius\&quot;:3913,\&quot;altitudeAccuracy\&quot;:null,\&quot;heading\&quot;:null,\&quot;speed\&quot;:null,\&quot;time_zone\&quot;:\&quot;America/New_York\&quot;},\&quot;userAgent\&quot;:\&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36\&quot;,\&quot;ip\&quot;:\&quot;71.140.147.103\&quot;,\&quot;remoteHost\&quot;:\&quot;\&quot;}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">clubmed-sandpiper-perf.payvela.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ui/v1/deleteTokenizedPaymentMethod</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
&quot;userName&quot;: &quot;${UserName}&quot;,&#xd;
&quot;timeout&quot;: false&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">clubmed-sandpiper-perf.payvela.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ui/v1/logout</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">UGVyZm9ybWFuY2UudGVzdGVyOlZlbGExIQ==</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
        </CookieManager>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="UserNamePassword" enabled="true">
          <stringProp name="filename">E:/Vela/UserName.csv.txt</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="variableNames">UserName,Password</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Card Number" enabled="true">
          <stringProp name="filename">E:/Vela/APIs/Tokenization/CardDetails.csv.txt</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="variableNames">CardNo</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="UserID" enabled="true">
          <stringProp name="filename">E:/Vela/UserID.csv</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="variableNames">UserID</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="UserRegistration" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">10</stringProp>
        <stringProp name="ThreadGroup.ramp_time">2</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">240</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update User Password and Email" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;id&quot;: &quot;506&quot;,&#xd;
    &quot;status&quot;: {&#xd;
        &quot;name&quot;: &quot;ACTIVE&quot;&#xd;
    },&#xd;
    &quot;userName&quot;: &quot;${UserNameUpdate}&quot;,&#xd;
    &quot;currentPwd&quot;: &quot;Vela1!&quot;,&#xd;
    &quot;newPwd&quot;: &quot;Vela2!&quot;,&#xd;
    &quot;reenterPwd&quot;: &quot;Vela2!&quot;,&#xd;
    &quot;pwdMisMatchError&quot;: false,&#xd;
    &quot;newPwdStrengthError&quot;: false,&#xd;
    &quot;reEnterPwdStrengthError&quot;: false,&#xd;
    &quot;currentPwdMisMatchError&quot;: false,&#xd;
    &quot;pwdLengthError&quot;: false,&#xd;
    &quot;pwdInHistoryError&quot;: false,&#xd;
    &quot;passwordExpiredInd&quot;: &quot;false&quot;,&#xd;
    &quot;minimumPasswordLength&quot;: &quot;6&quot;,&#xd;
    &quot;pwdStrengthPercentage&quot;: 0,&#xd;
    &quot;reEnterPwdStrengthPercentage&quot;: 0,&#xd;
    &quot;securityQuestionsEnrolledInd&quot;: false,&#xd;
    &quot;passwordHistoryCount&quot;: &quot;10&quot;,&#xd;
    &quot;email&quot;: &quot;${EmailUpdate}&quot;,&#xd;
    &quot;reEnterEmail&quot;: &quot;${EmailUpdate}&quot;,&#xd;
    &quot;emailMisMatchError&quot;: false,&#xd;
    &quot;password&quot;: &quot;Vela2!&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">clubmed-sandpiper-perf.payvela.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ui/v1/updateUserPwdAndEmail</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CreateSecurity Q&amp;A_UR" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[{&#xd;
    &quot;id&quot;: &quot;&quot;,&#xd;
    &quot;userId&quot;: ${UserID},&#xd;
    &quot;securityQuestionId&quot;: 1,&#xd;
    &quot;answer&quot;: &quot;11&quot;&#xd;
}]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">clubmed-sandpiper-perf.payvela.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ui/v1/createUserSecurityQuestionAnswers</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
        </CookieManager>
        <hashTree/>
        <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
          <boolProp name="clearEachIteration">false</boolProp>
          <boolProp name="useExpires">true</boolProp>
          <boolProp name="CacheManager.controlledByThread">false</boolProp>
        </CacheManager>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV_CreateSecurityQuestion" enabled="true">
          <stringProp name="filename">E:/Vela/UserID.csv</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">UserID</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV_UpdateUserPassword" enabled="true">
          <stringProp name="filename">E:/Vela/CSV/UpdateUserPasswordandEmail.txt</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">UserNameUpdate,EmailUpdate</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Security Question &amp; Answer" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">10</stringProp>
        <stringProp name="ThreadGroup.ramp_time">2</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">240</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CreateSecurityQ&amp;A" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[{&#xd;
    &quot;id&quot;: &quot;&quot;,&#xd;
    &quot;userId&quot;: 503,&#xd;
    &quot;securityQuestionId&quot;: 1,&#xd;
    &quot;answer&quot;: &quot;11&quot;&#xd;
}, {&#xd;
    &quot;id&quot;: &quot;&quot;,&#xd;
    &quot;userId&quot;: 502,&#xd;
    &quot;securityQuestionId&quot;: 8,&#xd;
    &quot;answer&quot;: &quot;12&quot;&#xd;
}, {&#xd;
    &quot;id&quot;: &quot;&quot;,&#xd;
    &quot;userId&quot;: 503,&#xd;
    &quot;securityQuestionId&quot;: 15,&#xd;
    &quot;answer&quot;: &quot;13&quot;&#xd;
}]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">clubmed-sandpiper-perf.payvela.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ui/v1/createUserSecurityQuestionAnswers</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="login" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
&quot;password&quot; : &quot;${Password}&quot;,&#xd;
&quot;userName&quot;: &quot;${UserID}&quot;,&#xd;
&quot;merchantCode&quot;:&quot;clubmed-sandpiper&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">clubmed-sandpiper-perf.payvela.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ui/v1/login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="UserID" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">ID</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;userId&quot;:(.+?),</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Reset Security Question" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;id&quot;: &quot;${ID}&quot;,&#xd;
    &quot;userName&quot;: &quot;${UserName}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">clubmed-sandpiper-perf.payvela.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ui/v1/resetUserSecurityQuestionAnswers</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Security Question" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[{&#xd;
        &quot;id&quot;: 262,&#xd;
        &quot;userId&quot;: 195,&#xd;
        &quot;securityQuestionId&quot;: 1,&#xd;
        &quot;answer&quot;: &quot;11&quot;,&#xd;
        &quot;createdDateTime&quot;: 1563308528000,&#xd;
        &quot;lastUpdatedDateTime&quot;: null,&#xd;
        &quot;securityQuestion&quot;: null,&#xd;
        &quot;message&quot;: null,&#xd;
        &quot;email&quot;: null,&#xd;
        &quot;mobile&quot;: null&#xd;
    },&#xd;
    {&#xd;
        &quot;id&quot;: 263,&#xd;
        &quot;userId&quot;: 195,&#xd;
        &quot;securityQuestionId&quot;: 8,&#xd;
        &quot;answer&quot;: &quot;12&quot;,&#xd;
        &quot;createdDateTime&quot;: 1563308528000,&#xd;
        &quot;lastUpdatedDateTime&quot;: null,&#xd;
        &quot;securityQuestion&quot;: null,&#xd;
        &quot;message&quot;: null,&#xd;
        &quot;email&quot;: null,&#xd;
        &quot;mobile&quot;: null&#xd;
    },&#xd;
    {&#xd;
        &quot;id&quot;: 264,&#xd;
        &quot;userId&quot;: 195,&#xd;
        &quot;securityQuestionId&quot;: 15,&#xd;
        &quot;answer&quot;: &quot;13&quot;,&#xd;
        &quot;createdDateTime&quot;: 1563308528000,&#xd;
        &quot;lastUpdatedDateTime&quot;: null,&#xd;
        &quot;securityQuestion&quot;: null,&#xd;
        &quot;message&quot;: null,&#xd;
        &quot;email&quot;: null,&#xd;
        &quot;mobile&quot;: null&#xd;
    }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">clubmed-sandpiper-perf.payvela.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ui/v1/updateUserSecurityQuestionAnswers</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get security question" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;userId&quot;:&quot;${ID}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">clubmed-sandpiper-perf.payvela.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ui/v1/getUserSecurityQuestionAnswers</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
&quot;userName&quot;: &quot;${UserID}&quot;,&#xd;
&quot;timeout&quot;: false&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">clubmed-sandpiper-perf.payvela.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ui/v1/logout</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
        </CookieManager>
        <hashTree/>
        <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
          <boolProp name="clearEachIteration">false</boolProp>
          <boolProp name="useExpires">true</boolProp>
          <boolProp name="CacheManager.controlledByThread">false</boolProp>
        </CacheManager>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="UserID &amp; Password" enabled="true">
          <stringProp name="filename">E:/Vela/UserName.csv.txt</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="variableNames">UserID,Password</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Reset_Username &amp; ID" enabled="true">
          <stringProp name="filename">E:/Jmeter param/ResetSequrityQuestion.txt</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">ID,UserName</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
